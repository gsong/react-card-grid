{"version":3,"sources":["example-app/examples/GridMinimumSetup.js"],"names":["GridMinimumSetup","useCalculateLayout","maxItemWidth","containerWidth","rowCount","containerRef","React","useState","cards","setCards","useEffect","fetch","then","response","json","itemWidth","calculateItemWidthWithCount","itemCount","length","Container","ref","map","card","Item","css","itemStyle","key","id"],"mappings":"mRAiBe,SAASA,IAAoB,IAAD,EACUC,YAAmB,CACpEC,aAJiB,MAGXC,EADiC,EACjCA,eAAgBC,EADiB,EACjBA,SAAUC,EADO,EACPA,aADO,EAKfC,IAAMC,SAAS,IALA,mBAKlCC,EALkC,KAK3BC,EAL2B,KAMzCH,IAAMI,WAAU,WACdC,MAAM,eACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,gBAAGJ,EAAH,EAAGA,MAAH,OAAeC,EAASD,QAC/B,IAEH,IAAMO,EAAYC,YAA4B,CAC5Cb,iBACAc,UAAWT,EAAMU,OACjBhB,aAjBiB,IAkBjBE,aAGF,OACE,YAAC,IAAKe,UAAN,cAAoB,CAAEJ,aAAtB,CAAmCK,IAAKf,IACrCG,EAAMa,KAAI,SAACC,GAAD,OACT,YAAC,IAAKC,KAAN,CAAWC,IAAKC,IAAWC,IAAKJ,EAAKK,IACnC,YAAC,IAAD,iBAAiBL,EAAU,CAAEP","file":"static/js/9.0319b671.chunk.js","sourcesContent":["//@flow strict\n/** @jsx jsx */\nimport React from \"react\";\nimport {\n  Grid,\n  calculateItemWidthWithCount,\n  useCalculateLayout,\n} from \"react-listitem-grid\";\nimport { jsx } from \"@emotion/core\";\n\nimport CardContent from \"../components/CardContent\";\nimport { itemStyle } from \"../styles\";\n\nimport \"react-listitem-grid/Grid/styles.css\";\n\nconst maxItemWidth = 350;\n\nexport default function GridMinimumSetup() {\n  const { containerWidth, rowCount, containerRef } = useCalculateLayout({\n    maxItemWidth,\n  });\n\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"/api/cards/\")\n      .then((response) => response.json())\n      .then(({ cards }) => setCards(cards));\n  }, []);\n\n  const itemWidth = calculateItemWidthWithCount({\n    containerWidth,\n    itemCount: cards.length,\n    maxItemWidth,\n    rowCount,\n  });\n\n  return (\n    <Grid.Container {...{ itemWidth }} ref={containerRef}>\n      {cards.map((card) => (\n        <Grid.Item css={itemStyle} key={card.id}>\n          <CardContent {...card} {...{ itemWidth }} />\n        </Grid.Item>\n      ))}\n    </Grid.Container>\n  );\n}\n"],"sourceRoot":""}