{"version":3,"sources":["example-app/constants.js","example-app/examples lazy /^/.//.*$/ groupOptions: {} namespace object","example-app/server.js","example-app/App.js","index.js"],"names":["itemCount","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","generateCard","contentType","faker","lorem","word","title","words","subTitle","url","internet","image","Server","models","card","Model","seeds","server","range","forEach","create","routes","this","namespace","get","cards","count","queryParams","cardCount","length","destroy","passthrough","examples","FlexAll","label","FlexMaxItems","FlexMaxRows","FlexMaxRowsMaxItems","GridAll","GridMaxItems","GridMaxRows","GridMaxRowsMaxItems","GridMinimumSetup","Playground","src","Component","globalStyle","html","boxSizing","fontFamily","App","React","useState","selected","setExample","Example","lazy","Suspense","fallback","styles","css","marginBottom","name","value","onChange","currentTarget","entries","key","href","marginLeft","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f650fff8.chunk.js","sourcesContent":["//@flow strict\nexport const itemCount = 10;\n","var map = {\n\t\"./FlexAll\": [\n\t\t211,\n\t\t0,\n\t\t1\n\t],\n\t\"./FlexAll.js\": [\n\t\t211,\n\t\t0,\n\t\t1\n\t],\n\t\"./FlexMaxItems\": [\n\t\t212,\n\t\t0,\n\t\t2\n\t],\n\t\"./FlexMaxItems.js\": [\n\t\t212,\n\t\t0,\n\t\t2\n\t],\n\t\"./FlexMaxRows\": [\n\t\t213,\n\t\t0,\n\t\t3\n\t],\n\t\"./FlexMaxRows.js\": [\n\t\t213,\n\t\t0,\n\t\t3\n\t],\n\t\"./FlexMaxRowsMaxItems\": [\n\t\t214,\n\t\t0,\n\t\t4\n\t],\n\t\"./FlexMaxRowsMaxItems.js\": [\n\t\t214,\n\t\t0,\n\t\t4\n\t],\n\t\"./GridAll\": [\n\t\t215,\n\t\t0,\n\t\t5\n\t],\n\t\"./GridAll.js\": [\n\t\t215,\n\t\t0,\n\t\t5\n\t],\n\t\"./GridMaxItems\": [\n\t\t216,\n\t\t0,\n\t\t6\n\t],\n\t\"./GridMaxItems.js\": [\n\t\t216,\n\t\t0,\n\t\t6\n\t],\n\t\"./GridMaxRows\": [\n\t\t217,\n\t\t0,\n\t\t7\n\t],\n\t\"./GridMaxRows.js\": [\n\t\t217,\n\t\t0,\n\t\t7\n\t],\n\t\"./GridMaxRowsMaxItems\": [\n\t\t218,\n\t\t0,\n\t\t8\n\t],\n\t\"./GridMaxRowsMaxItems.js\": [\n\t\t218,\n\t\t0,\n\t\t8\n\t],\n\t\"./GridMinimumSetup\": [\n\t\t219,\n\t\t0,\n\t\t9\n\t],\n\t\"./GridMinimumSetup.js\": [\n\t\t219,\n\t\t0,\n\t\t9\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 1479;\nmodule.exports = webpackAsyncContext;","//@flow strict\nimport faker from \"faker\";\nimport range from \"lodash/range\";\nimport { Model, Server } from \"miragejs\";\n\nimport { itemCount } from \"./constants\";\n\nnew Server({\n  models: { card: Model },\n\n  seeds(server) {\n    range(itemCount).forEach(() => server.create(\"card\", generateCard()));\n  },\n\n  routes() {\n    this.namespace = \"api\";\n\n    this.get(\"/cards/init\", ({ cards }, { queryParams: { count } }) => {\n      const cardCount = cards.all().models.length;\n\n      if (count > cardCount) {\n        range(count - cardCount).forEach(() => cards.create(generateCard()));\n      }\n\n      if (count < cardCount) {\n        cards\n          .all()\n          .slice(count)\n          .models.map((card) => card.destroy());\n      }\n\n      return cards.all();\n    });\n\n    this.get(\"/cards\", ({ cards }, { queryParams: { count } }) =>\n      count ? cards.all().slice(0, count) : cards.all(),\n    );\n\n    this.passthrough();\n  },\n});\n\nfunction generateCard() {\n  return {\n    contentType: faker.lorem.word(),\n    title: faker.lorem.words(8),\n    subTitle: faker.lorem.words(),\n    url: faker.internet.url(),\n    image: {\n      url: `https://picsum.photos/seed/${faker.lorem.word()}/500`,\n    },\n  };\n}\n","//@flow strict\n/** @jsx jsx */\nimport React from \"react\";\nimport { Global, jsx } from \"@emotion/core\";\n\nimport \"./server\";\n\nconst examples = {\n  FlexAll: { label: \"Flex with all cards\" },\n  FlexMaxItems: { label: \"Flex max items per row with all cards\" },\n  FlexMaxRows: { label: \"Flex with maxRows constraints\" },\n  FlexMaxRowsMaxItems: {\n    label: \"Flex max items per row with maxRows constraints\",\n  },\n  GridAll: { label: \"Grid with all cards\" },\n  GridMaxItems: { label: \"Grid max items per row with all cards\" },\n  GridMaxRows: { label: \"Grid with maxRows constraints\" },\n  GridMaxRowsMaxItems: {\n    label: \"Grid max items per row with maxRows constraints\",\n  },\n  GridMinimumSetup: { label: \"Grid with minimum setup\" },\n  Playground: {\n    label: \"Library playground\",\n    src: \"Playground/index.js\",\n    Component: () => import(\"./Playground/index.js\"),\n  },\n};\n\nconst App = () => {\n  const [selected, setExample] = React.useState(\"FlexAll\");\n  const Example = React.lazy(\n    // $FlowFixMe\n    examples[selected].Component ?? (() => import(`./examples/${selected}`)),\n  );\n  // $FlowFixMe\n  const src = examples[selected].src ?? `examples/${selected}.js`;\n\n  return (\n    <React.Suspense fallback={<div>Loading...</div>}>\n      <main>\n        <Global styles={globalStyle} />\n        <nav css={{ marginBottom: \"0.75em\" }}>\n          <label>\n            Choose an example:\n            {/* eslint-disable-next-line jsx-a11y/no-onchange */}\n            <select\n              name=\"example\"\n              value={selected}\n              onChange={(e) => setExample(e.currentTarget.value)}\n            >\n              {/* $FlowFixMe */}\n              {Object.entries(examples).map(([value, { label }]) => (\n                <option {...{ value }} key={value}>\n                  {label}\n                </option>\n              ))}\n            </select>\n          </label>\n          <a\n            href={`https://github.com/gsong/react-listitem-grid/blob/develop/src/example-app/${src}`}\n            css={{ marginLeft: \"1em\" }}\n          >\n            View source\n          </a>\n        </nav>\n        <Example />\n      </main>\n    </React.Suspense>\n  );\n};\n\nconst globalStyle = {\n  html: {\n    boxSizing: \"border-box\",\n    fontFamily: \"sans-serif\",\n  },\n\n  \"*, *:before, *:after\": {\n    boxSizing: \"inherit\",\n    fontFamily: \"inherit\",\n  },\n};\n\nexport default App;\n","//@flow strict\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./example-app/App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement,\n);\n"],"sourceRoot":""}