{"version":3,"sources":["example-app/constants.js","example-app/server.js","../dist/defaults.js","../dist/utils.js","../dist/hooks.js","../dist/Flex/index.js","../dist/Grid/index.js","example-app/components/CardContent.js","example-app/styles.js","example-app/Playground/constants.js","example-app/Playground/contexts.js","example-app/Playground/hooks.js","example-app/Playground/FlexContainer.js","example-app/Playground/GridContainer.js","example-app/Playground/index.js","example-app/App.js","example-app/examples/FlexAll.js","example-app/examples/FlexMaxItems.js","example-app/examples/FlexMaxRows.js","example-app/examples/FlexMaxRowsMaxItems.js","example-app/examples/GridAll.js","example-app/examples/GridMaxItems.js","example-app/examples/GridMaxRows.js","example-app/examples/GridMaxRowsMaxItems.js","example-app/examples/GridMinimumSetup.js","index.js"],"names":["itemCount","generateCard","contentType","faker","lorem","word","title","words","subTitle","url","internet","image","Server","models","card","Model","seeds","server","range","forEach","create","routes","this","namespace","get","cards","count","queryParams","cardCount","all","length","slice","map","destroy","passthrough","defaults","columnGap","rowGap","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","source","key","_defineProperty$1","getOwnPropertyDescriptors","defineProperties","defineProperty","calculateItemWidthWithCount","_ref2","rowCount","rest","_objectWithoutProperties$1","calculateItemWidth","Math","min","_ref3","_ref3$columnGap","defaults$1","containerWidth","maxItemWidth","floor","flexCompensate","_ref4","_ref4$columnGap","_ref4$rowGap","margin","concat","width","_ref5","_ref5$columnGap","_ref5$rowGap","useCalculateLayout","calcParams","containerRef","React$1","useRef","_React$useState","useState","_React$useState2","_slicedToArray$1","setContainerWidth","observer","current","_asyncToGenerator$1","_regeneratorRuntime$1","mark","_callee","ResizeObserver","module","wrap","_context","prev","next","window","sent","entries","entry","contentRect","stop","useEffect","observe","disconnect","calculatedValues","_ref","_containerWidth","_ref$columnGap","_maxItemWidth","_ref$minItemWidth","minItemWidth","maxRows","_ref$maximizeItemsPer","maximizeItemsPerRow","_ref$isFlex","isFlex","max","maxCount","minCount","itemWidth","desiredItemCount","undefined","calculateLayoutSpec","index","Container","forwardRef","ref","_ref$rowGap","children","props","style","createElement","Item","_ref2$columnGap","_ref2$rowGap","_extends$1","Content","styled","div","display","flexDirection","flexGrow","cursor","titleStyle","textAlign","Title","h2","fontSize","lineHeight","marginBottom","overflow","WebkitBoxOrient","WebkitLineClamp","ActionBar","alignItems","justifyContent","LinkButton","button","backgroundColor","border","color","fontWeight","letterSpacing","padding","textShadow","useClickableContent","down","link","React","onMouseDown","Date","now","onMouseUp","click","CardContent","handleMore","linkRef","clickProps","Fragment","css","order","paddingTop","href","textDecoration","src","alt","height","objectFit","aria-hidden","onClick","aria-label","itemStyle","borderRadius","listStyleType","boxShadow","alignment","Constants","createContext","constants","useLayout","observeMaxRows","calcOptions","useContext","params","layoutInfo","useGetCards","adjustedItemWidth","containerStyle","useMemo","marginLeft","marginRight","setCards","fetch","then","response","json","FlexContainer","Flex","id","GridContainer","Grid","useInit","useReducer","state","update","updateState","Form","gridForm","input","unit","defaultValue","onChange","e","currentTarget","value","Field","useCallback","debounce","Number","Input","type","pattern","required","event","borderBottom","position","top","examples","flex","component","label","flexMaxItems","flexMaxRows","flexMaxRowsMaxItems","grid","gridMaxItems","gridMaxRows","gridMaxRowsMaxItems","gridMinimumSetup","playground","Provider","globalStyle","html","boxSizing","fontFamily","App","selected","setExample","Example","name","styles","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.703a1d20.chunk.js","sourcesContent":["//@flow strict\nexport const itemCount = 10;\n","//@flow strict\nimport faker from \"faker\";\nimport range from \"lodash/range\";\nimport { Model, Server } from \"miragejs\";\n\nimport { itemCount } from \"./constants\";\n\nnew Server({\n  models: { card: Model },\n\n  seeds(server) {\n    range(itemCount).forEach(() => server.create(\"card\", generateCard()));\n  },\n\n  routes() {\n    this.namespace = \"api\";\n\n    this.get(\"/cards/init\", ({ cards }, { queryParams: { count } }) => {\n      const cardCount = cards.all().models.length;\n\n      if (count > cardCount) {\n        range(count - cardCount).forEach(() => cards.create(generateCard()));\n      }\n\n      if (count < cardCount) {\n        cards\n          .all()\n          .slice(count)\n          .models.map((card) => card.destroy());\n      }\n\n      return cards.all();\n    });\n\n    this.get(\"/cards\", ({ cards }, { queryParams: { count } }) =>\n      count ? cards.all().slice(0, count) : cards.all(),\n    );\n\n    this.passthrough();\n  },\n});\n\nfunction generateCard() {\n  return {\n    contentType: faker.lorem.word(),\n    title: faker.lorem.words(8),\n    subTitle: faker.lorem.words(),\n    url: faker.internet.url(),\n    image: {\n      url: `https://picsum.photos/seed/${faker.lorem.word()}/500`,\n    },\n  };\n}\n","var defaults = {\n  columnGap: 0,\n  rowGap: 0\n};\n\nexport default defaults;\n","import _defineProperty$1 from '@babel/runtime/helpers/defineProperty';\nimport _objectWithoutProperties$1 from '@babel/runtime/helpers/objectWithoutProperties';\nimport defaults$1 from './defaults.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty$1(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\nvar calculateLayoutSpec = function calculateLayoutSpec(_ref) {\n  var _containerWidth = _ref.containerWidth,\n      _ref$columnGap = _ref.columnGap,\n      columnGap = _ref$columnGap === void 0 ? defaults$1.columnGap : _ref$columnGap,\n      _maxItemWidth = _ref.maxItemWidth,\n      _ref$minItemWidth = _ref.minItemWidth,\n      minItemWidth = _ref$minItemWidth === void 0 ? 0 : _ref$minItemWidth,\n      maxRows = _ref.maxRows,\n      _ref$maximizeItemsPer = _ref.maximizeItemsPerRow,\n      maximizeItemsPerRow = _ref$maximizeItemsPer === void 0 ? false : _ref$maximizeItemsPer,\n      _ref$isFlex = _ref.isFlex,\n      isFlex = _ref$isFlex === void 0 ? false : _ref$isFlex;\n  var containerWidth = isFlex ? _containerWidth - columnGap : _containerWidth;\n  var maxItemWidth = Math.max(_maxItemWidth, minItemWidth);\n  var maxCount = Math.max(Math.floor(((containerWidth !== null && containerWidth !== void 0 ? containerWidth : minItemWidth) + columnGap) / (minItemWidth + columnGap)), 1);\n  var minCount = Math.max(Math.floor(((containerWidth !== null && containerWidth !== void 0 ? containerWidth : maxItemWidth) + columnGap) / (maxItemWidth + columnGap)), 1);\n  var rowCount = maximizeItemsPerRow ? maxCount : maxCount - minCount > 0 ? minCount + 1 : minCount;\n  var itemWidth = calculateItemWidth({\n    containerWidth: containerWidth,\n    maxItemWidth: maxItemWidth,\n    rowCount: rowCount,\n    columnGap: columnGap\n  });\n  var desiredItemCount = maxRows !== undefined && maxRows > 0 ? maxRows * rowCount : undefined;\n  return {\n    containerWidth: containerWidth,\n    itemWidth: itemWidth,\n    rowCount: rowCount,\n    desiredItemCount: desiredItemCount\n  };\n};\nvar calculateItemWidthWithCount = function calculateItemWidthWithCount(_ref2) {\n  var itemCount = _ref2.itemCount,\n      rowCount = _ref2.rowCount,\n      rest = _objectWithoutProperties$1(_ref2, [\"itemCount\", \"rowCount\"]);\n\n  var itemWidth = calculateItemWidth(_objectSpread(_objectSpread({}, rest), {}, {\n    rowCount: Math.min(itemCount, rowCount)\n  }));\n  return itemWidth;\n};\n\nvar calculateItemWidth = function calculateItemWidth(_ref3) {\n  var _ref3$columnGap = _ref3.columnGap,\n      columnGap = _ref3$columnGap === void 0 ? defaults$1.columnGap : _ref3$columnGap,\n      containerWidth = _ref3.containerWidth,\n      maxItemWidth = _ref3.maxItemWidth,\n      rowCount = _ref3.rowCount;\n  return Math.floor(Math.min(((containerWidth !== null && containerWidth !== void 0 ? containerWidth : maxItemWidth) - (rowCount - 1) * columnGap) / rowCount, maxItemWidth));\n};\n\nvar flexCompensate = {\n  container: function container(_ref4) {\n    var _ref4$columnGap = _ref4.columnGap,\n        columnGap = _ref4$columnGap === void 0 ? defaults$1.columnGap : _ref4$columnGap,\n        _ref4$rowGap = _ref4.rowGap,\n        rowGap = _ref4$rowGap === void 0 ? defaults$1.rowGap : _ref4$rowGap;\n    var margin = \"-\".concat(rowGap, \"px 0 0 -\").concat(columnGap, \"px\");\n    var width = \"calc(100% + \".concat(columnGap, \"px)\");\n    return {\n      margin: margin,\n      width: width\n    };\n  },\n  item: function item(_ref5) {\n    var _ref5$columnGap = _ref5.columnGap,\n        columnGap = _ref5$columnGap === void 0 ? defaults$1.columnGap : _ref5$columnGap,\n        _ref5$rowGap = _ref5.rowGap,\n        rowGap = _ref5$rowGap === void 0 ? defaults$1.rowGap : _ref5$rowGap;\n    var margin = \"\".concat(rowGap, \"px 0 0 \").concat(columnGap, \"px\");\n    return {\n      margin: margin\n    };\n  }\n};\n\nexport { calculateItemWidthWithCount, calculateLayoutSpec, flexCompensate };\n","import _defineProperty$1 from '@babel/runtime/helpers/defineProperty';\nimport _regeneratorRuntime$1 from '@babel/runtime/regenerator';\nimport _asyncToGenerator$1 from '@babel/runtime/helpers/asyncToGenerator';\nimport _slicedToArray$1 from '@babel/runtime/helpers/slicedToArray';\nimport React$1 from 'react';\nimport { calculateLayoutSpec } from './utils.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty$1(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\nvar useCalculateLayout = function useCalculateLayout(calcParams) {\n  var containerRef = React$1.useRef();\n\n  var _React$useState = React$1.useState(1024),\n      _React$useState2 = _slicedToArray$1(_React$useState, 2),\n      containerWidth = _React$useState2[0],\n      setContainerWidth = _React$useState2[1];\n\n  var observer = React$1.useRef();\n  !observer.current && _asyncToGenerator$1( /*#__PURE__*/_regeneratorRuntime$1.mark(function _callee() {\n    var ResizeObserver, module;\n    return _regeneratorRuntime$1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ResizeObserver = window.ResizeObserver;\n\n            if (\"ResizeObserver\" in window) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 4;\n            return import('@juggle/resize-observer');\n\n          case 4:\n            module = _context.sent;\n            ResizeObserver = module.ResizeObserver;\n\n          case 6:\n            observer.current = new ResizeObserver(function (entries) {\n              entries.forEach(function (entry) {\n                return setContainerWidth(entry.contentRect.width);\n              });\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))();\n  React$1.useEffect(function () {\n    containerRef.current && observer.current && observer.current.observe(containerRef.current);\n    return function () {\n      return observer.current && observer.current.disconnect();\n    };\n  });\n  var calculatedValues = calculateLayoutSpec(_objectSpread({\n    containerWidth: containerWidth\n  }, calcParams));\n  return _objectSpread({\n    containerRef: containerRef\n  }, calculatedValues);\n};\n\nexport { useCalculateLayout };\n","import _defineProperty$1 from '@babel/runtime/helpers/defineProperty';\nimport React$1 from 'react';\nimport _objectWithoutProperties$1 from '@babel/runtime/helpers/objectWithoutProperties';\nimport defaults$1 from '../defaults.js';\nimport { flexCompensate } from '../utils.js';\nimport _extends$1 from '@babel/runtime/helpers/extends';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty$1(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\nvar Container = /*#__PURE__*/React$1.forwardRef(function (_ref, ref) {\n  var _ref$columnGap = _ref.columnGap,\n      columnGap = _ref$columnGap === void 0 ? defaults$1.columnGap : _ref$columnGap,\n      _ref$rowGap = _ref.rowGap,\n      rowGap = _ref$rowGap === void 0 ? defaults$1.rowGap : _ref$rowGap,\n      children = _ref.children,\n      props = _objectWithoutProperties$1(_ref, [\"columnGap\", \"rowGap\", \"children\"]);\n\n  var style = flexCompensate.container({\n    columnGap: columnGap,\n    rowGap: rowGap\n  });\n  return /*#__PURE__*/React$1.createElement(\"div\", props, /*#__PURE__*/React$1.createElement(\"ul\", {\n    \"data-react-listitem-flex-container\": true,\n    style: style,\n    ref: ref\n  }, children));\n});\n\nvar Item = function Item(_ref2) {\n  var _ref2$columnGap = _ref2.columnGap,\n      columnGap = _ref2$columnGap === void 0 ? defaults$1.columnGap : _ref2$columnGap,\n      itemWidth = _ref2.itemWidth,\n      _ref2$rowGap = _ref2.rowGap,\n      rowGap = _ref2$rowGap === void 0 ? defaults$1.rowGap : _ref2$rowGap,\n      props = _objectWithoutProperties$1(_ref2, [\"columnGap\", \"itemWidth\", \"rowGap\"]);\n\n  var style = _objectSpread({\n    width: itemWidth\n  }, flexCompensate.item({\n    columnGap: columnGap,\n    rowGap: rowGap\n  }));\n\n  return /*#__PURE__*/React$1.createElement(\"li\", _extends$1({\n    \"data-react-listitem-flex-item\": true,\n    style: style\n  }, props));\n};\n\nvar index = {\n  Container: Container,\n  Item: Item\n};\n\nexport default index;\n","import React$1 from 'react';\nimport _objectWithoutProperties$1 from '@babel/runtime/helpers/objectWithoutProperties';\nimport defaults$1 from '../defaults.js';\nimport _extends$1 from '@babel/runtime/helpers/extends';\n\nvar Container = /*#__PURE__*/React$1.forwardRef(function (_ref, ref) {\n  var itemWidth = _ref.itemWidth,\n      _ref$columnGap = _ref.columnGap,\n      columnGap = _ref$columnGap === void 0 ? defaults$1.columnGap : _ref$columnGap,\n      _ref$rowGap = _ref.rowGap,\n      rowGap = _ref$rowGap === void 0 ? defaults$1.rowGap : _ref$rowGap,\n      children = _ref.children,\n      props = _objectWithoutProperties$1(_ref, [\"itemWidth\", \"columnGap\", \"rowGap\", \"children\"]);\n\n  return /*#__PURE__*/React$1.createElement(\"div\", props, /*#__PURE__*/React$1.createElement(\"ul\", {\n    \"data-react-listitem-grid-container\": true,\n    style: {\n      \"--columnWidth\": itemWidth,\n      \"--columnGap\": columnGap,\n      \"--rowGap\": rowGap\n    },\n    ref: ref\n  }, children));\n});\n\nvar Item = function Item(props) {\n  return /*#__PURE__*/React$1.createElement(\"li\", _extends$1({\n    \"data-react-listitem-grid-item\": true\n  }, props));\n};\n\nvar index = {\n  Container: Container,\n  Item: Item\n};\n\nexport default index;\n","//@flow strict\n/** @jsx jsx */\nimport React from \"react\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport styled from \"@emotion/styled\";\nimport { jsx } from \"@emotion/core\";\n\ntype Props = {|\n  contentType: string,\n  handleMore: () => void,\n  image: { url: string, alt?: string },\n  itemWidth: number,\n  subTitle: string,\n  title: string,\n  url: string,\n|};\n\nconst CardContent = ({\n  contentType,\n  handleMore,\n  image,\n  itemWidth,\n  subTitle,\n  title,\n  url,\n}: Props) => {\n  const [linkRef, clickProps] = useClickableContent();\n\n  return (\n    <React.Fragment>\n      <Content {...clickProps} css={{ order: 1 }}>\n        <header css={{ margin: \"auto 6px 6px\", order: 1, paddingTop: 6 }}>\n          <Title>\n            <a\n              // $FlowFixMe\n              ref={linkRef}\n              href={url}\n              css={{ color: \"hsl(0, 0%, 25%)\", textDecoration: \"none\" }}\n            >\n              {title}\n            </a>\n          </Title>\n          <p css={titleStyle}>{subTitle}</p>\n        </header>\n\n        <img\n          src={image.url}\n          alt={image.alt ? image.alt : \"\"}\n          css={{\n            height: ((itemWidth - 2) * 9) / 16,\n            objectFit: \"cover\",\n            width: itemWidth - 2,\n          }}\n        />\n      </Content>\n\n      <ActionBar>\n        <div aria-hidden css={{ margin: 6 }}>\n          {contentType}\n        </div>\n        <VisuallyHidden>Content type is {contentType}</VisuallyHidden>\n        <LinkButton\n          onClick={handleMore}\n          aria-label={`More actions for ${title}`}\n        >\n          •••\n        </LinkButton>\n      </ActionBar>\n    </React.Fragment>\n  );\n};\n\nconst Content = styled.div({\n  display: \"flex\",\n  flexDirection: \"column\",\n  flexGrow: 1,\n\n  \":hover\": { cursor: \"pointer\" },\n});\n\nconst titleStyle = { textAlign: \"center\", width: \"100%\" };\n\nconst Title = styled.h2([\n  titleStyle,\n  {\n    fontSize: 14,\n    lineHeight: \"1.35em\",\n    marginBottom: 6,\n\n    display: \"-webkit-box\",\n    overflow: \"hidden\",\n    WebkitBoxOrient: \"vertical\",\n    WebkitLineClamp: 2,\n  },\n]);\n\nconst ActionBar = styled.div({\n  alignItems: \"baseline\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n});\n\nconst LinkButton = styled.button({\n  backgroundColor: \"transparent\",\n  border: \"none\",\n  color: \"hsl(0, 0%, 40%)\",\n  fontWeight: 900,\n  letterSpacing: \"0.15em\",\n  padding: 6,\n\n  \":hover\": { cursor: \"pointer\" },\n\n  // stylelint-disable-next-line selector-list-comma-newline-after\n  \":hover, :focus\": {\n    color: \"orange\",\n    textShadow: \"0 0 5px orange\",\n  },\n});\n\nexport const useClickableContent = () => {\n  const link = React.useRef<HTMLElement | typeof undefined>();\n  let down;\n\n  const onMouseDown = () => (down = Date.now());\n  const onMouseUp = () => {\n    const elapsed = Date.now() - down;\n    if (elapsed < 200) {\n      // eslint-disable-next-line no-unused-expressions\n      link.current?.click();\n    }\n  };\n\n  return [link, { onMouseDown, onMouseUp }];\n};\n\nexport default CardContent;\n","//@flow strict\nexport const itemStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  border: `1px solid hsl(0, 0%, 85%)`,\n  borderRadius: 8,\n  color: \"hsl(0, 0%, 40%)\",\n  fontSize: 12,\n  listStyleType: \"none\",\n\n  \":hover\": { boxShadow: \"0 0 10px orange\" },\n};\n","//@flow strict\nexport * from \"../constants\";\n\n// outer container\nexport const alignment = \"center\";\nexport const border = 1;\nexport const padding = 20;\nexport const width = 80;\n\n// grid container\nexport const columnGap = 16;\nexport const maxRows = 2;\nexport const rowGap = 16;\n\n// grid item\nexport const maxItemWidth = 350;\nexport const minItemWidth = 150;\n","//@flow strict\nimport React from \"react\";\n\nimport * as constants from \"./constants\";\n\nconst Constants = React.createContext<typeof constants>(constants);\n\nexport default Constants;\n","//@flow strict\nimport React from \"react\";\nimport {\n  calculateItemWidthWithCount,\n  useCalculateLayout,\n} from \"react-listitem-grid\";\n\nimport Constants from \"./contexts\";\n\nimport type { Options } from \"react-listitem-grid/utils\";\n\ntype CalcOptions = {| ...Options, observeMaxRows: boolean |};\n\nexport const useLayout = ({ observeMaxRows, ...calcOptions }: CalcOptions) => {\n  const constants = React.useContext(Constants);\n  const {\n    alignment,\n    border,\n    itemCount,\n    padding,\n    rowGap,\n    width,\n    ...params\n  } = constants;\n  const layoutInfo = useCalculateLayout({ ...params, ...calcOptions });\n\n  const count =\n    observeMaxRows && layoutInfo.desiredItemCount !== 0\n      ? layoutInfo.desiredItemCount ?? itemCount\n      : itemCount;\n\n  const { cards, adjustedItemWidth } = useGetCards({\n    ...layoutInfo,\n    ...params,\n    count,\n    itemCount,\n    observeMaxRows,\n  });\n\n  const containerStyle = React.useMemo(\n    () => [\n      {\n        border: `${border}px solid lightgray`,\n        margin: \"auto\",\n        padding,\n        width: `${width}%`,\n      },\n      alignment === \"left\"\n        ? { marginLeft: 0 }\n        : alignment === \"right\"\n        ? { marginRight: 0 }\n        : {},\n    ],\n    [alignment, border, padding, width],\n  );\n\n  return {\n    ...constants,\n    ...layoutInfo,\n    count,\n    containerStyle,\n    cards,\n    adjustedItemWidth,\n  };\n};\n\ntype HookParams = {\n  columnGap?: number,\n  containerWidth: number,\n  count: number,\n  itemCount: number,\n  maxItemWidth: number,\n  observeMaxRows: boolean,\n  rowCount: number,\n};\n\nexport const useGetCards = ({\n  columnGap,\n  containerWidth,\n  count,\n  itemCount,\n  maxItemWidth,\n  observeMaxRows,\n  rowCount,\n}: HookParams) => {\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    const route = observeMaxRows ? \"\" : \"init/\";\n\n    fetch(`/api/cards/${route}?count=${count}`)\n      .then((response) => response.json())\n      .then(({ cards }) => setCards(cards));\n  }, [count, observeMaxRows, itemCount]);\n\n  const adjustedItemWidth = calculateItemWidthWithCount({\n    columnGap,\n    containerWidth,\n    itemCount: cards.length,\n    maxItemWidth,\n    rowCount,\n  });\n\n  return { cards, adjustedItemWidth };\n};\n","//@flow strict\n/** @jsx jsx */\nimport { Flex } from \"react-listitem-grid\";\nimport { jsx } from \"@emotion/core\";\n\nimport CardContent from \"../components/CardContent\";\nimport { itemStyle } from \"../styles\";\nimport { useLayout } from \"./hooks\";\n\nimport \"react-listitem-grid/Flex/styles.css\";\n\ntype Props = {\n  maximizeItemsPerRow?: boolean,\n  observeMaxRows?: boolean,\n};\n\nconst FlexContainer = ({\n  maximizeItemsPerRow = false,\n  observeMaxRows = false,\n}: Props) => {\n  const {\n    adjustedItemWidth: itemWidth,\n    cards,\n    columnGap,\n    containerRef,\n    containerStyle,\n    rowGap,\n  } = useLayout({\n    maximizeItemsPerRow,\n    isFlex: true,\n    observeMaxRows,\n  });\n\n  return (\n    <section>\n      <h3>Flex ({itemWidth}px)</h3>\n      <Flex.Container\n        {...{ columnGap, rowGap }}\n        css={containerStyle}\n        ref={containerRef}\n      >\n        {cards.map((card) => (\n          <Flex.Item\n            {...{ columnGap, itemWidth, rowGap }}\n            css={itemStyle}\n            key={card.id}\n          >\n            <CardContent {...card} {...{ itemWidth }} />\n          </Flex.Item>\n        ))}\n      </Flex.Container>\n    </section>\n  );\n};\n\nexport default FlexContainer;\n","//@flow strict\n/** @jsx jsx */\nimport { Grid } from \"react-listitem-grid\";\nimport { jsx } from \"@emotion/core\";\n\nimport CardContent from \"../components/CardContent\";\nimport { itemStyle } from \"../styles\";\nimport { useLayout } from \"./hooks\";\n\nimport \"react-listitem-grid/Grid/styles.css\";\n\ntype Props = {\n  maximizeItemsPerRow?: boolean,\n  observeMaxRows?: boolean,\n};\n\nconst GridContainer = ({\n  maximizeItemsPerRow = false,\n  observeMaxRows = false,\n}: Props) => {\n  const {\n    adjustedItemWidth: itemWidth,\n    cards,\n    columnGap,\n    containerRef,\n    containerStyle,\n    rowGap,\n  } = useLayout({ maximizeItemsPerRow, observeMaxRows });\n\n  return (\n    <section>\n      <h3>Grid ({itemWidth}px)</h3>\n      <Grid.Container\n        {...{ columnGap, itemWidth, rowGap }}\n        css={containerStyle}\n        ref={containerRef}\n      >\n        {cards.map((card) => (\n          <Grid.Item css={itemStyle} key={card.id}>\n            <CardContent {...card} {...{ itemWidth }} />\n          </Grid.Item>\n        ))}\n      </Grid.Container>\n    </section>\n  );\n};\n\nexport default GridContainer;\n","//@flow strict\n/** @jsx jsx */\nimport React from \"react\";\nimport debounce from \"lodash/debounce\";\nimport { jsx } from \"@emotion/core\";\n\nimport * as constants from \"./constants\";\nimport Constants from \"./contexts\";\nimport FlexContainer from \"./FlexContainer\";\nimport GridContainer from \"./GridContainer\";\n\nexport default () => {\n  const { state, updateState } = useInit();\n\n  return (\n    <React.Fragment>\n      <Form {...{ state, updateState }} />\n\n      <Constants.Provider value={state}>\n        <section>\n          <h2>Max Item Width</h2>\n          <FlexContainer />\n          <GridContainer />\n        </section>\n        <hr />\n        <section>\n          <h2>Max Item Width (observe maxRows)</h2>\n          <FlexContainer observeMaxRows />\n          <GridContainer observeMaxRows />\n        </section>\n        <hr />\n        <section>\n          <h2>Max Items Per Row</h2>\n          <FlexContainer maximizeItemsPerRow />\n          <GridContainer maximizeItemsPerRow />\n        </section>\n        <hr />\n        <section>\n          <h2>Max Items Per Row (observe maxRows)</h2>\n          <FlexContainer maximizeItemsPerRow observeMaxRows />\n          <GridContainer maximizeItemsPerRow observeMaxRows />\n        </section>\n      </Constants.Provider>\n    </React.Fragment>\n  );\n};\n\nconst useInit = () => {\n  const [state, updateState] = React.useReducer(\n    // $FlowFixMe\n    (state, update) => ({ ...state, ...update }),\n    constants,\n  );\n\n  return { state, updateState };\n};\n\nconst Form = (props) => (\n  <form css={gridForm}>\n    <fieldset>\n      <legend>Container</legend>\n      <Field input=\"width\" unit=\"%\" {...props} />\n      <Field input=\"border\" {...props} />\n      <Field input=\"padding\" {...props} />\n      <Field input=\"alignment\" unit=\"\" {...props}>\n        <select\n          defaultValue={props.state.alignment}\n          onChange={(e) =>\n            props.updateState({ alignment: e.currentTarget.value })\n          }\n        >\n          <option value=\"left\">Left</option>\n          <option value=\"center\">Center</option>\n          <option value=\"right\">Right</option>\n        </select>\n      </Field>\n    </fieldset>\n    <fieldset>\n      <legend>Grid</legend>\n      <Field input=\"itemCount\" unit=\"\" {...props} />\n      <Field input=\"maxRows\" unit=\"\" {...props} />\n      <Field input=\"columnGap\" {...props} />\n      <Field input=\"rowGap\" {...props} />\n      <Field input=\"minItemWidth\" {...props} />\n      <Field input=\"maxItemWidth\" {...props} />\n    </fieldset>\n  </form>\n);\n\nconst Field = ({\n  input,\n  unit = \"px\",\n  state,\n  updateState,\n  children = undefined,\n  ...props\n}) => {\n  const update = React.useCallback(\n    debounce(\n      (value) =>\n        updateState({\n          [(input: string)]: value === \"\" ? constants[input] : Number(value),\n        }),\n      500,\n    ),\n    [input, updateState],\n  );\n\n  return (\n    <label\n      css={{\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        alignItems: \"center\",\n        fontSize: \"inherit\",\n        \"> *\": { margin: \".2em\" },\n      }}\n      {...props}\n    >\n      <div css={{ marginLeft: 0 }}>{input}:</div>\n      <Input defaultValue={state[input]} update={update}>\n        {children}\n      </Input>\n      <div css={{ width: \"1em\" }}>{unit}</div>\n    </label>\n  );\n};\n\nconst Input = ({ defaultValue, update, children = undefined }) =>\n  children ? (\n    children\n  ) : (\n    <input\n      type=\"number\"\n      pattern=\"[0-9]*\"\n      min={0}\n      required\n      onChange={(event) => update(event.currentTarget.value)}\n      {...{ defaultValue }}\n      css={{ width: \"4em\" }}\n    />\n  );\n\nconst gridForm = {\n  backgroundColor: \"white\",\n  borderBottom: \"1px solid lightGray\",\n  display: \"flex\",\n  margin: \"0 -8px 0 -8px\",\n  padding: \".5em\",\n  fontSize: \"clamp(12px, 3.5vw, 1rem)\",\n\n  \"@media (min-height: 670px)\": {\n    position: \"sticky\",\n    top: 0,\n  },\n};\n","//@flow strict\n/** @jsx jsx */\nimport React from \"react\";\nimport { Global, jsx } from \"@emotion/core\";\n\nimport \"./server\";\nimport FlexAll from \"./examples/FlexAll\";\nimport FlexMaxItems from \"./examples/FlexMaxItems\";\nimport FlexMaxRows from \"./examples/FlexMaxRows\";\nimport FlexMaxRowsMaxItems from \"./examples/FlexMaxRowsMaxItems\";\nimport GridAll from \"./examples/GridAll\";\nimport GridMaxItems from \"./examples/GridMaxItems\";\nimport GridMaxRows from \"./examples/GridMaxRows\";\nimport GridMaxRowsMaxItems from \"./examples/GridMaxRowsMaxItems\";\nimport GridMinimumSetup from \"./examples/GridMinimumSetup\";\nimport Playground from \"./Playground\";\n\nconst examples = {\n  flex: {\n    component: FlexAll,\n    label: \"Flex with all cards\",\n  },\n  flexMaxItems: {\n    component: FlexMaxItems,\n    label: \"Flex max items per row with all cards\",\n  },\n  flexMaxRows: {\n    component: FlexMaxRows,\n    label: \"Flex with maxRows constraints\",\n  },\n  flexMaxRowsMaxItems: {\n    component: FlexMaxRowsMaxItems,\n    label: \"Flex max items per row with maxRows constraints\",\n  },\n  grid: {\n    component: GridAll,\n    label: \"Grid with all cards\",\n  },\n  gridMaxItems: {\n    component: GridMaxItems,\n    label: \"Grid max items per row with all cards\",\n  },\n  gridMaxRows: {\n    component: GridMaxRows,\n    label: \"Grid with maxRows constraints\",\n  },\n  gridMaxRowsMaxItems: {\n    component: GridMaxRowsMaxItems,\n    label: \"Grid max items per row with maxRows constraints\",\n  },\n  gridMinimumSetup: {\n    component: GridMinimumSetup,\n    label: \"Grid with minimum setup\",\n  },\n  playground: {\n    component: Playground,\n    label: \"Library playground\",\n    src: \"Playground/index.js\",\n  },\n};\n\nconst App = () => {\n  const [selected, setExample] = React.useState(\"flex\");\n  const Example = examples[selected].component;\n\n  // $FlowFixMe\n  const src = examples[selected].src ?? `examples/${Example.name}.js`;\n\n  return (\n    <React.Fragment>\n      <main>\n        <Global styles={globalStyle} />\n        <nav css={{ marginBottom: \"0.75em\" }}>\n          <label>\n            Choose an example:\n            <select\n              name=\"example\"\n              value={selected}\n              onChange={(e) => setExample(e.currentTarget.value)}\n            >\n              {/* $FlowFixMe */}\n              {Object.entries(examples).map(([value, { label }]) => (\n                <option {...{ value }} key={value}>\n                  {label}\n                </option>\n              ))}\n            </select>\n          </label>\n          <a\n            href={`https://github.com/gsong/react-listitem-grid/blob/develop/src/example-app/${src}`}\n            css={{ marginLeft: \"1em\" }}\n          >\n            View source\n          </a>\n        </nav>\n        <Example />\n      </main>\n    </React.Fragment>\n  );\n};\n\nconst globalStyle = {\n  html: {\n    boxSizing: \"border-box\",\n    fontFamily: \"sans-serif\",\n  },\n\n  \"*, *:before, *:after\": {\n    boxSizing: \"inherit\",\n    fontFamily: \"inherit\",\n  },\n};\n\nexport default App;\n","//@flow strict\n/** @jsx jsx */\nimport React from \"react\";\nimport {\n  Flex,\n  calculateItemWidthWithCount,\n  useCalculateLayout,\n} from \"react-listitem-grid\";\nimport { jsx } from \"@emotion/core\";\n\nimport CardContent from \"../components/CardContent\";\nimport { itemStyle } from \"../styles\";\n\nimport \"react-listitem-grid/Flex/styles.css\";\n\nconst columnGap = 16;\nconst maxItemWidth = 350;\nconst minItemWidth = 150;\nconst rowGap = 16;\n\nexport default function FlexAll() {\n  const { containerWidth, rowCount, containerRef } = useCalculateLayout({\n    columnGap,\n    maxItemWidth,\n    minItemWidth,\n    isFlex: true,\n  });\n\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"/api/cards/\")\n      .then((response) => response.json())\n      .then(({ cards }) => setCards(cards));\n  }, []);\n\n  const itemWidth = calculateItemWidthWithCount({\n    columnGap,\n    containerWidth,\n    itemCount: cards.length,\n    maxItemWidth,\n    rowCount,\n  });\n\n  return (\n    <Flex.Container\n      {...{ columnGap, rowGap }}\n      css={{ padding: 8, width: \"70%\" }}\n      ref={containerRef}\n    >\n      {cards.map((card) => (\n        <Flex.Item\n          {...{ itemWidth, columnGap, rowGap }}\n          css={itemStyle}\n          key={card.id}\n        >\n          <CardContent {...card} {...{ itemWidth }} />\n        </Flex.Item>\n      ))}\n    </Flex.Container>\n  );\n}\n","//@flow strict\n/** @jsx jsx */\nimport React from \"react\";\nimport {\n  Flex,\n  calculateItemWidthWithCount,\n  useCalculateLayout,\n} from \"react-listitem-grid\";\nimport { jsx } from \"@emotion/core\";\n\nimport CardContent from \"../components/CardContent\";\nimport { itemStyle } from \"../styles\";\n\nimport \"react-listitem-grid/Flex/styles.css\";\n\nconst columnGap = 16;\nconst maxItemWidth = 350;\nconst maximizeItemsPerRow = true;\nconst minItemWidth = 150;\nconst rowGap = 16;\n\nexport default function FlexMaxItems() {\n  const { containerWidth, rowCount, containerRef } = useCalculateLayout({\n    columnGap,\n    maxItemWidth,\n    minItemWidth,\n    maximizeItemsPerRow,\n    isFlex: true,\n  });\n\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"/api/cards/\")\n      .then((response) => response.json())\n      .then(({ cards }) => setCards(cards));\n  }, []);\n\n  const itemWidth = calculateItemWidthWithCount({\n    columnGap,\n    containerWidth,\n    itemCount: cards.length,\n    maxItemWidth,\n    rowCount,\n  });\n\n  return (\n    <Flex.Container\n      {...{ columnGap, rowGap }}\n      css={{ padding: 8, width: \"70%\" }}\n      ref={containerRef}\n    >\n      {cards.map((card) => (\n        <Flex.Item\n          {...{ itemWidth, columnGap, rowGap }}\n          css={itemStyle}\n          key={card.id}\n        >\n          <CardContent {...card} {...{ itemWidth }} />\n        </Flex.Item>\n      ))}\n    </Flex.Container>\n  );\n}\n","//@flow strict\n/** @jsx jsx */\nimport React from \"react\";\nimport {\n  Flex,\n  calculateItemWidthWithCount,\n  useCalculateLayout,\n} from \"react-listitem-grid\";\nimport { jsx } from \"@emotion/core\";\n\nimport CardContent from \"../components/CardContent\";\nimport { itemStyle } from \"../styles\";\n\nimport \"react-listitem-grid/Flex/styles.css\";\n\nconst columnGap = 16;\nconst maxItemWidth = 350;\nconst maxRows = 1;\nconst minItemWidth = 150;\nconst rowGap = 16;\n\nexport default function FlexMaxRows() {\n  const {\n    containerWidth,\n    rowCount,\n    desiredItemCount,\n    containerRef,\n  } = useCalculateLayout({\n    columnGap,\n    maxItemWidth,\n    maxRows,\n    minItemWidth,\n    isFlex: true,\n  });\n\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    if (desiredItemCount && cards.length < desiredItemCount) {\n      fetch(`/api/cards/?count=${desiredItemCount}`)\n        .then((response) => response.json())\n        .then(({ cards }) => setCards(cards));\n    }\n  }, [cards.length, desiredItemCount]);\n\n  const itemWidth = calculateItemWidthWithCount({\n    columnGap,\n    containerWidth,\n    itemCount: cards.length,\n    maxItemWidth,\n    rowCount,\n  });\n\n  return (\n    <Flex.Container\n      {...{ columnGap, rowGap }}\n      css={{ padding: 8, width: \"70%\" }}\n      ref={containerRef}\n    >\n      {cards.slice(0, desiredItemCount).map((card) => (\n        <Flex.Item\n          {...{ itemWidth, columnGap, rowGap }}\n          css={itemStyle}\n          key={card.id}\n        >\n          <CardContent {...card} {...{ itemWidth }} />\n        </Flex.Item>\n      ))}\n    </Flex.Container>\n  );\n}\n","//@flow strict\n/** @jsx jsx */\nimport React from \"react\";\nimport {\n  Flex,\n  calculateItemWidthWithCount,\n  useCalculateLayout,\n} from \"react-listitem-grid\";\nimport { jsx } from \"@emotion/core\";\n\nimport CardContent from \"../components/CardContent\";\nimport { itemStyle } from \"../styles\";\n\nimport \"react-listitem-grid/Flex/styles.css\";\n\nconst columnGap = 16;\nconst maxItemWidth = 350;\nconst maxRows = 1;\nconst maximizeItemsPerRow = true;\nconst minItemWidth = 150;\nconst rowGap = 16;\n\nexport default function FlexMaxRowsMaxItems() {\n  const {\n    containerWidth,\n    rowCount,\n    desiredItemCount,\n    containerRef,\n  } = useCalculateLayout({\n    columnGap,\n    maxItemWidth,\n    maxRows,\n    minItemWidth,\n    maximizeItemsPerRow,\n    isFlex: true,\n  });\n\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    if (desiredItemCount && cards.length < desiredItemCount) {\n      fetch(`/api/cards/?count=${desiredItemCount}`)\n        .then((response) => response.json())\n        .then(({ cards }) => setCards(cards));\n    }\n  }, [cards.length, desiredItemCount]);\n\n  const itemWidth = calculateItemWidthWithCount({\n    columnGap,\n    containerWidth,\n    itemCount: cards.length,\n    maxItemWidth,\n    rowCount,\n  });\n\n  return (\n    <Flex.Container\n      {...{ columnGap, rowGap }}\n      css={{ padding: 8, width: \"70%\" }}\n      ref={containerRef}\n    >\n      {cards.slice(0, desiredItemCount).map((card) => (\n        <Flex.Item\n          {...{ itemWidth, columnGap, rowGap }}\n          css={itemStyle}\n          key={card.id}\n        >\n          <CardContent {...card} {...{ itemWidth }} />\n        </Flex.Item>\n      ))}\n    </Flex.Container>\n  );\n}\n","//@flow strict\n/** @jsx jsx */\nimport React from \"react\";\nimport {\n  Grid,\n  calculateItemWidthWithCount,\n  useCalculateLayout,\n} from \"react-listitem-grid\";\nimport { jsx } from \"@emotion/core\";\n\nimport CardContent from \"../components/CardContent\";\nimport { itemStyle } from \"../styles\";\n\nimport \"react-listitem-grid/Grid/styles.css\";\n\nconst columnGap = 16;\nconst maxItemWidth = 350;\nconst minItemWidth = 150;\nconst rowGap = 16;\n\nexport default function GridAll() {\n  const { containerWidth, rowCount, containerRef } = useCalculateLayout({\n    columnGap,\n    maxItemWidth,\n    minItemWidth,\n  });\n\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"/api/cards/\")\n      .then((response) => response.json())\n      .then(({ cards }) => setCards(cards));\n  }, []);\n\n  const itemWidth = calculateItemWidthWithCount({\n    columnGap,\n    containerWidth,\n    itemCount: cards.length,\n    maxItemWidth,\n    rowCount,\n  });\n\n  return (\n    <Grid.Container\n      {...{ itemWidth, columnGap, rowGap }}\n      css={{ padding: 8, width: \"70%\" }}\n      ref={containerRef}\n    >\n      {cards.map((card) => (\n        <Grid.Item css={itemStyle} key={card.id}>\n          <CardContent {...card} {...{ itemWidth }} />\n        </Grid.Item>\n      ))}\n    </Grid.Container>\n  );\n}\n","//@flow strict\n/** @jsx jsx */\nimport React from \"react\";\nimport {\n  Grid,\n  calculateItemWidthWithCount,\n  useCalculateLayout,\n} from \"react-listitem-grid\";\nimport { jsx } from \"@emotion/core\";\n\nimport CardContent from \"../components/CardContent\";\nimport { itemStyle } from \"../styles\";\n\nimport \"react-listitem-grid/Grid/styles.css\";\n\nconst columnGap = 16;\nconst maxItemWidth = 350;\nconst maximizeItemsPerRow = true;\nconst minItemWidth = 150;\nconst rowGap = 16;\n\nexport default function GridMaxItems() {\n  const { containerWidth, rowCount, containerRef } = useCalculateLayout({\n    columnGap,\n    maxItemWidth,\n    minItemWidth,\n    maximizeItemsPerRow,\n  });\n\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"/api/cards/\")\n      .then((response) => response.json())\n      .then(({ cards }) => setCards(cards));\n  }, []);\n\n  const itemWidth = calculateItemWidthWithCount({\n    columnGap,\n    containerWidth,\n    itemCount: cards.length,\n    maxItemWidth,\n    rowCount,\n  });\n\n  return (\n    <Grid.Container\n      {...{ itemWidth, columnGap, rowGap }}\n      css={{ padding: 8, width: \"70%\" }}\n      ref={containerRef}\n    >\n      {cards.map((card) => (\n        <Grid.Item css={itemStyle} key={card.id}>\n          <CardContent {...card} {...{ itemWidth }} />\n        </Grid.Item>\n      ))}\n    </Grid.Container>\n  );\n}\n","//@flow strict\n/** @jsx jsx */\nimport React from \"react\";\nimport {\n  Grid,\n  calculateItemWidthWithCount,\n  useCalculateLayout,\n} from \"react-listitem-grid\";\nimport { jsx } from \"@emotion/core\";\n\nimport CardContent from \"../components/CardContent\";\nimport { itemStyle } from \"../styles\";\n\nimport \"react-listitem-grid/Grid/styles.css\";\n\nconst columnGap = 16;\nconst maxItemWidth = 350;\nconst maxRows = 1;\nconst minItemWidth = 150;\nconst rowGap = 16;\n\nexport default function GridMaxRows() {\n  const {\n    containerWidth,\n    rowCount,\n    desiredItemCount,\n    containerRef,\n  } = useCalculateLayout({\n    columnGap,\n    maxItemWidth,\n    maxRows,\n    minItemWidth,\n  });\n\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    if (desiredItemCount && cards.length < desiredItemCount) {\n      fetch(`/api/cards/?count=${desiredItemCount}`)\n        .then((response) => response.json())\n        .then(({ cards }) => setCards(cards));\n    }\n  }, [cards.length, desiredItemCount]);\n\n  const itemWidth = calculateItemWidthWithCount({\n    columnGap,\n    containerWidth,\n    itemCount: cards.length,\n    maxItemWidth,\n    rowCount,\n  });\n\n  return (\n    <Grid.Container\n      {...{ itemWidth, columnGap, rowGap }}\n      css={{ padding: 8, width: \"70%\" }}\n      ref={containerRef}\n    >\n      {cards.slice(0, desiredItemCount).map((card) => (\n        <Grid.Item css={itemStyle} key={card.id}>\n          <CardContent {...card} {...{ itemWidth }} />\n        </Grid.Item>\n      ))}\n    </Grid.Container>\n  );\n}\n","//@flow strict\n/** @jsx jsx */\nimport React from \"react\";\nimport {\n  Grid,\n  calculateItemWidthWithCount,\n  useCalculateLayout,\n} from \"react-listitem-grid\";\nimport { jsx } from \"@emotion/core\";\n\nimport CardContent from \"../components/CardContent\";\nimport { itemStyle } from \"../styles\";\n\nimport \"react-listitem-grid/Grid/styles.css\";\n\nconst columnGap = 16;\nconst maxItemWidth = 350;\nconst maxRows = 1;\nconst maximizeItemsPerRow = true;\nconst minItemWidth = 150;\nconst rowGap = 16;\n\nexport default function GridMaxRowsMaxItems() {\n  const {\n    containerWidth,\n    rowCount,\n    desiredItemCount,\n    containerRef,\n  } = useCalculateLayout({\n    columnGap,\n    maxItemWidth,\n    maxRows,\n    minItemWidth,\n    maximizeItemsPerRow,\n  });\n\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    if (desiredItemCount && cards.length < desiredItemCount) {\n      fetch(`/api/cards/?count=${desiredItemCount}`)\n        .then((response) => response.json())\n        .then(({ cards }) => setCards(cards));\n    }\n  }, [cards.length, desiredItemCount]);\n\n  const itemWidth = calculateItemWidthWithCount({\n    columnGap,\n    containerWidth,\n    itemCount: cards.length,\n    maxItemWidth,\n    rowCount,\n  });\n\n  return (\n    <Grid.Container\n      {...{ itemWidth, columnGap, rowGap }}\n      css={{ padding: 8, width: \"70%\" }}\n      ref={containerRef}\n    >\n      {cards.slice(0, desiredItemCount).map((card) => (\n        <Grid.Item css={itemStyle} key={card.id}>\n          <CardContent {...card} {...{ itemWidth }} />\n        </Grid.Item>\n      ))}\n    </Grid.Container>\n  );\n}\n","//@flow strict\n/** @jsx jsx */\nimport React from \"react\";\nimport {\n  Grid,\n  calculateItemWidthWithCount,\n  useCalculateLayout,\n} from \"react-listitem-grid\";\nimport { jsx } from \"@emotion/core\";\n\nimport CardContent from \"../components/CardContent\";\nimport { itemStyle } from \"../styles\";\n\nimport \"react-listitem-grid/Grid/styles.css\";\n\nconst maxItemWidth = 350;\n\nexport default function GridMinimumSetup() {\n  const { containerWidth, rowCount, containerRef } = useCalculateLayout({\n    maxItemWidth,\n  });\n\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"/api/cards/\")\n      .then((response) => response.json())\n      .then(({ cards }) => setCards(cards));\n  }, []);\n\n  const itemWidth = calculateItemWidthWithCount({\n    containerWidth,\n    itemCount: cards.length,\n    maxItemWidth,\n    rowCount,\n  });\n\n  return (\n    <Grid.Container {...{ itemWidth }} ref={containerRef}>\n      {cards.map((card) => (\n        <Grid.Item css={itemStyle} key={card.id}>\n          <CardContent {...card} {...{ itemWidth }} />\n        </Grid.Item>\n      ))}\n    </Grid.Container>\n  );\n}\n","//@flow strict\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./example-app/App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement,\n);\n"],"sourceRoot":""}